using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Windows.Forms;
using System.Data.Entity;
using DevExpress.XtraPivotGrid;

namespace WindowsFormsApplication1
{
    public partial class Form2 : Form
    {
        public Form2()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            WindowsFormsApplication1.RainfallContext dbContext = new WindowsFormsApplication1.RainfallContext();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.Rainfalls.Load();
            //fiel
            // This line of code is generated by Data Source Configuration Wizard

            //pivotGridField1.CustomTotals.Add(DevExpress.Data.PivotGrid.PivotSummaryType.Average);
            //pivotGridField1.TotalValueFormat.FormatType = DevExpress.Utils.FormatType.Numeric;
            //pivotGridField1.TotalValueFormat.FormatString = "n2";

            ctiysBindingSource.DataSource = dbContext.Rainfalls.Local.ToBindingList();
        }

        private void Form2_Load(object sender, EventArgs e)
        {
            using (var context = new RainfallContext())
            {
                List<Rainfall> rainfalls = context.Rainfalls.ToList();
                pivotGridControl1.DataSource = rainfalls;

            }
        }

        private void pivotGridControl1_CustomSummary(object sender, DevExpress.XtraPivotGrid.PivotGridCustomSummaryEventArgs e)
        {
            if (e.DataField == null)
            {
                return;
            }
            string caption = e.DataField.Caption; ;
            if (caption == "平均降水" || caption == "平均次数")
            {
                //select row[pivotGridField6];
                
                if (caption == "平均降水")
                {
                    var groupedRecords = from row in e.CreateDrillDownDataSource().Cast<PivotDrillDownDataRow>()
                                         group row by new { y = row[pivotGridField6], m = row[pivotGridField7] } into g
                                         select new { Year = g.Key, Sum = g.Sum(row => (int)(row[pivotGridField4])) };
                    e.CustomValue = groupedRecords.Average(gr => gr.Sum);
                }
                if (caption == "平均次数")
                {
                    var groupedRecords = from row in e.CreateDrillDownDataSource().Cast<PivotDrillDownDataRow>()
                                         group row by new { y = row[pivotGridField6], m = row[pivotGridField7] } into g
                                         select new { Year = g.Key, Sum = g.Sum(row => (int)(row[pivotGridField5])) };
                    e.CustomValue = groupedRecords.Average(gr => gr.Sum);
                }
            }
        }
    }
}
